---
- name: Install base software on all
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      with_items: "{{ ansible_play_batch }}"       
    - name: Adoptium yum repository
      yum_repository:
        name: Adoptium
        description: Adoptium
        baseurl: https://packages.adoptium.net/artifactory/rpm/rocky/$releasever/$basearch
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.adoptium.net/artifactory/api/gpg/key/public
    - name: remove any installed git
      dnf:
        name: git
        state: absent
    - name: Install Temurin and git
      dnf:
        name:
          - temurin-11-jdk
          - git
          - wget
        state: latest
      
- name: Jenkins installation
  hosts: jenkins_controllers
  become: yes
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: yes
    - name: permit traffic in default zone on port 8080/tcp
      ansible.posix.firewalld:
        port: 8080/tcp
        permanent: yes
        state: enabled
        immediate: yes
    - name: jenkins yum repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: http://pkg.jenkins.io/redhat-stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    - name: Install Jenkins
      dnf:
        name:
          - jenkins-2.452.3
        state: latest
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
    - name: Create directory for systemd override file
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        recurse: yes
      with_items:
        - '/etc/systemd/system/jenkins.service.d'
    - name: Create limits file
      copy:
        dest: "/etc/systemd/system/jenkins.service.d/override.conf"
        src: "override.conf"
    - name: start jenkins service
      systemd:
        name: jenkins
        state: restarted
        enabled: yes
    - name: create cloudflared directory
      file: 
        path: "/opt/tools/cloudflared"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    - name: download cloudflared 2022.10.2
      get_url:
        url: https://github.com/cloudflare/cloudflared/releases/download/2022.10.2/cloudflared-linux-amd64
        dest: /opt/tools/cloudflared/cloudflared
        mode: '0755'
    - name: setup cloudflared profile
      copy:
        dest: /etc/profile.d/cloudflared.sh
        content: |
          PATH=/opt/tools/cloudflared:$PATH
    - name: set final ownership to /opt/tools
      file: 
        path: "/opt/tools"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes    

- name: Agent installation
  hosts: agents
  become: yes
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: yes
    - name: permit traffic in default zone on port 22/tcp
      ansible.posix.firewalld:
        port: 22/tcp
        permanent: yes
        state: enabled
        immediate: yes
    - name: Microsoft RedHat yum repository
      yum_repository:
        name: packages-microsoft-com-prod
        description: packages-microsoft-com-prod
        baseurl: https://packages.microsoft.com/rhel/8/prod/
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    - name: Install languages
      dnf:
        name: 
          - unzip
          - tree
          - php
          - perl
          - ruby
          - python39
          - powershell
        state: latest
