---
- name: Install base software on all
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: true
      with_items: "{{ ansible_play_batch }}"       
    - name: Adoptium yum repository
      yum_repository:
        name: Adoptium
        description: Adoptium
        baseurl: https://packages.adoptium.net/artifactory/rpm/rocky/$releasever/$basearch
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.adoptium.net/artifactory/api/gpg/key/public
    - name: remove any installed git
      dnf:
        name: git
        state: absent
    - name: Install temurin and git
      dnf:
        name:
          - temurin-11-jdk
          - git
          - wget
        state: latest
      
- name: Jenkins installation
  hosts: jenkins_controllers
  become: true
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: true
    - name: permit traffic in default zone on port 8080/tcp
      ansible.posix.firewalld:
        port: 8080/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: jenkins yum repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: http://pkg.jenkins.io/redhat-stable
        enabled: true
        gpgcheck: true
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
    - name: Install Jenkins
      dnf:
        name:
          - jenkins-2.492.2
        state: latest
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: true
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
    - name: Create directory for systemd override file
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        recurse: true
      with_items:
        - '/etc/systemd/system/jenkins.service.d'
    - name: Create limits file
      copy:
        dest: "/etc/systemd/system/jenkins.service.d/override.conf"
        src: "override.conf"
    - name: start jenkins service
      systemd:
        name: jenkins
        state: restarted
        enabled: true

- name: Agent installation
  hosts: agents
  become: true
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: true
    - name: permit traffic in default zone on port 22/tcp
      ansible.posix.firewalld:
        port: 22/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: remove any installed docker
      dnf:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent
    - name: docker-ce-stable yum repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/8/$basearch/stable
        enabled: true
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/centos/gpg
    - name: Install Docker and unzip
      dnf:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - unzip
          - tree
        state: latest
    - name: add docker group
      group:
        name: docker
        state: present
    - name: add $USER to docker group
      user: 
        name: "{{ ansible_user }}"
        groups: docker
        append: true
    - name: do a ssh reset in order to reflect the $USER group changes
      meta: reset_connection
    - name: start Docker service
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: create kind directory
      file: 
        path: "/opt/tools/kind"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true
    - name: download kind 0.20.0
      get_url:
        url: https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64
        dest: /opt/tools/kind/kind
        mode: '0755'
    - name: download kubectl
      get_url:
        url: https://dl.k8s.io/release/v1.25.0/bin/linux/amd64/kubectl
        dest: /opt/tools/kind/kubectl
        mode: '0755'
    - name: setup kind profile
      copy:
        dest: /etc/profile.d/kind.sh
        content: |
          PATH=/opt/tools/kind:$PATH
    - name: Create limits file
      copy:
        dest: "/home/vagrant/kind-config.yaml"
        src: "kind-config.yaml"    

- name: Kind configuration
  hosts: agents
  tasks:
    - name: create cluster
      command: kind create cluster --config /home/vagrant/kind-config.yaml
    - name: create namespace
      command: kubectl create namespace jenkins
    - name: create serviceaccount
      command: kubectl create serviceaccount jenkins --namespace=jenkins
    - name: create rolebinding
      command: kubectl create rolebinding jenkins-admin-binding --clusterrole=admin --serviceaccount=jenkins:jenkins --namespace=jenkins
