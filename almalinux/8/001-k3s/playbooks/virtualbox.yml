---
- name: Install base software on all
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: true
      with_items: "{{ ansible_play_batch }}"       
    - name: Adoptium yum repository
      yum_repository:
        name: Adoptium
        description: Adoptium
        baseurl: https://packages.adoptium.net/artifactory/rpm/rocky/$releasever/$basearch
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.adoptium.net/artifactory/api/gpg/key/public
    - name: remove any installed git
      dnf:
        name: git
        state: absent
    - name: Install temurin and git
      dnf:
        name:
          - temurin-11-jdk
          - git
          - wget
        state: latest
      
- name: k3s installation
  hosts: k3s_masters
  become: true
  tasks:
    - name: disable and stop firewalld service
      systemd:
        name: firewalld
        state: stopped
        enabled: no
    - name: setup k3s
      ansible.builtin.shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san {{ansible_hostname}}" sh -
    - name: fetch kubeconfig
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: .kube/config
        flat: true      

- name: Jenkins installation
  hosts: jenkins_controllers
  become: true
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: true
    - name: permit traffic in default zone on port 8080/tcp
      ansible.posix.firewalld:
        port: 8080/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: jenkins yum repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: http://pkg.jenkins.io/redhat-stable
        enabled: true
        gpgcheck: true
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    - name: Install Jenkins
      dnf:
        name:
          - jenkins-2.479.3
        state: latest
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: true
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
    - name: Create directory for systemd override file
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        recurse: true
      with_items:
        - '/etc/systemd/system/jenkins.service.d'
    - name: Create limits file
      copy:
        dest: "/etc/systemd/system/jenkins.service.d/override.conf"
        src: "override.conf"
    - name: start jenkins service
      systemd:
        name: jenkins
        state: restarted
        enabled: true

- name: localhost info
  hosts: localhost
  tasks:
    - name: echo KUBECONFIG
      shell: "echo $KUBECONFIG"
      environment:
        KUBECONFIG: '{{playbook_dir}}/.kube/config'
    - name: replace IP address
      replace:
        path: '{{playbook_dir}}/.kube/config'
        regexp: '127.0.0.1'
        replace: "192.168.56.20"