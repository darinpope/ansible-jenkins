---
- name: Install base software on all
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: true
      with_items: "{{ ansible_play_batch }}"       
    - name: add AdoptOpenJDK apt key
      apt_key:
        url: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
        state: present
    - name: add AdoptOpenJDK repository
      apt_repository:
        repo: deb https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal main
    - name: Install fontconfig, AdoptOpenJDK and git
      apt:
        name:
          - adoptopenjdk-11-hotspot
          - apt-transport-https 
          - ca-certificates 
          - curl 
          - fontconfig
          - git
          - gnupg
          - gnupg-agent 
          - software-properties-common
          - wget
          - unzip
        state: latest
      
- name: Jenkins installation
  hosts: jenkins_controllers
  become: true
  tasks:
    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
    - name: Allow all access to tcp port 8080
      community.general.ufw:
        rule: allow
        port: '8080'
        proto: tcp
    - name: add Jenkins apt key
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins.io.key
        state: present
    - name: Jenkins deb repository
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian binary/
    - name: Install Jenkins
      apt:
        name:
          - jenkins-2.319.3
        state: latest
    - name: Stop Jenkins (autostarts after install)
      systemd:
        name: jenkins
        state: stopped
    - name: delete JENKINS_HOME directory
      file:
        state: absent
        path: /var/lib/jenkins
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: true
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
        - '/var/lib/jenkins'
    - name: Update JAVA_ARGS
      lineinfile:
        path: "/etc/default/jenkins"
        regexp: ".*-Djava.awt.headless=true.*"
        line: 'JAVA_ARGS="-Djava.awt.headless=true -Djava.io.tmpdir=/var/cache/$NAME/tmp/ -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York -Duser.timezone=America/New_York"'
        state: present
    - name: Update JENKINS_ARGS
      lineinfile:
        path: "/etc/default/jenkins"
        regexp: ".*JENKINS_ARGS=.*"
        line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT --pluginroot=/var/cache/$NAME/plugins"'
        state: present
    - name: Create limits file
      copy:
        dest: "/etc/security/limits.d/30-jenkins.conf"
        src: "30-jenkins.conf"
    - name: start jenkins service
      systemd:
        name: jenkins
        state: started

- name: Agent installation
  hosts: agents
  become: true
  tasks:
    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
    - name: Allow all access to tcp port 22
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp
    - name: remove any installed docker
      apt:
        name:
          - docker 
          - docker-engine 
          - docker.io 
          - containerd 
          - runc 
        state: absent
    - name: add docker-ce apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: docker-ce-stable deb repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
    - name: add docker group
      group:
        name: docker
        state: present
    - name: add $USER to docker group
      user: 
        name: "{{ ansible_user }}"
        groups: docker
        append: true
    - name: do a ssh reset in order to reflect the $USER group changes
      meta: reset_connection
    - name: start Docker service
      systemd:
        name: docker
        state: started        
    - name: create Maven directory
      file: 
        path: "/opt/tools/maven"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true
    - name: download Maven 3.8.5
      unarchive:
        src: https://mirrors.sonic.net/apache/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
        dest: /opt/tools/maven
        remote_src: true
    - name: create Maven latest symlink
      file: 
        src: /opt/tools/maven/apache-maven-3.8.5
        dest: /opt/tools/maven/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: create Gradle directory
      file: 
        path: "/opt/tools/gradle"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true
    - name: download Gradle 7.2
      unarchive:
        src: https://services.gradle.org/distributions/gradle-7.2-bin.zip
        dest: /opt/tools/gradle
        remote_src: true
    - name: create Gradle latest symlink
      file: 
        src: /opt/tools/gradle/gradle-7.2
        dest: /opt/tools/gradle/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: Update PATH with Maven and Gradle
      lineinfile:
        path: "/etc/environment"
        regexp: ".*PATH=.*"
        line: 'PATH="/opt/tools/gradle/latest/bin:/opt/tools/maven/latest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"'
        state: present
    - name: set final ownership to /opt/tools
      file: 
        path: "/opt/tools"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true