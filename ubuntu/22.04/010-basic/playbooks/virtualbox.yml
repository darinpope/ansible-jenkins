---
- name: Install base software on all
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: true
      with_items: "{{ ansible_play_batch }}"       
    - name: add Adoptium apt key
      ansible.builtin.apt_key:
        url: https://packages.adoptium.net/artifactory/api/gpg/key/public
        state: present
    - name: add Adoptium repository
      ansible.builtin.apt_repository:
        repo: deb https://packages.adoptium.net/artifactory/deb focal main
        state: present
    - name: Install common software
      apt:
        name:
          - temurin-17-jdk
          - apt-transport-https 
          - ca-certificates 
          - curl 
          - git
          - gnupg
          - gnupg-agent 
          - software-properties-common
          - unzip
          - wget
        state: latest
      
- name: Jenkins installation
  hosts: jenkins_controllers
  become: true
  tasks:
    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
    - name: Allow all access to tcp port 8080
      community.general.ufw:
        rule: allow
        port: '8080'
        proto: tcp
    - name: add Jenkins apt key
      ansible.builtin.apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present
    - name: Jenkins deb repository
      ansible.builtin.apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present
    - name: Install Jenkins
      apt:
        name:
          - jenkins=2.401.3
    - name: Stop Jenkins (autostarts after install)
      systemd:
        name: jenkins
        state: stopped
    - name: delete JENKINS_HOME directory
      file:
        state: absent
        path: /var/lib/jenkins
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: true
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
        - '/var/lib/jenkins'
    - name: Create directory for systemd override file
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        recurse: true
      with_items:
        - '/etc/systemd/system/jenkins.service.d'
    - name: Create limits file
      copy:
        dest: "/etc/systemd/system/jenkins.service.d/override.conf"
        src: "override.conf"
    - name: start jenkins service
      systemd:
        name: jenkins
        state: restarted
        enabled: true

- name: Agent installation
  hosts: agents
  become: true
  tasks:
    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
    - name: Allow all access to tcp port 22
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp
    - name: remove any installed docker
      apt:
        name:
          - docker 
          - docker-engine 
          - docker.io 
          - containerd 
          - runc 
        state: absent
    - name: add docker-ce apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: docker-ce-stable deb repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
    - name: add docker group
      group:
        name: docker
        state: present
    - name: add $USER to docker group
      user: 
        name: "{{ ansible_user }}"
        groups: docker
        append: true
    - name: do a ssh reset in order to reflect the $USER group changes
      meta: reset_connection
    - name: start Docker service
      systemd:
        name: docker
        state: restarted   
        enabled: true