---
- name: Install base software on all
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: true
      with_items: "{{ ansible_play_batch }}"       
    - name: AdoptOpenJDK yum repository
      yum_repository:
        name: AdoptOpenJDK
        description: AdoptOpenJDK
        baseurl: http://adoptopenjdk.jfrog.io/adoptopenjdk/rpm/centos/$releasever/$basearch
        enabled: true
        gpgcheck: true
        gpgkey: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    - name: Endpoint yum repository
      yum_repository:
        name: endpoint
        description: End Point repository
        baseurl: https://packages.endpointdev.com/rhel/$releasever/os/$basearch/
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.endpointdev.com/endpoint-rpmsign-7.pub
    - name: remove any installed git
      yum:
        name: git
        state: absent
    - name: Install fontconfig, AdoptOpenJDK and git
      yum:
        name:
          - fontconfig
          - adoptopenjdk-11-hotspot
          - git
        state: latest
      
- name: Common agent and Waypoint server installation
  hosts: agents,waypoint_servers
  become: true
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: true
    - name: permit traffic in default zone on port 22/tcp
      ansible.posix.firewalld:
        port: 22/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: remove any installed docker
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent
    - name: docker-ce-stable yum repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        enabled: true
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/centos/gpg
    - name: hashicorp yum repository
      yum_repository:
        name: hashicorp
        description: Hashicorp Stable - $basearch
        baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
        enabled: true
        gpgcheck: true
        gpgkey: https://rpm.releases.hashicorp.com/gpg
    - name: Install Docker, waypoint and unzip
      yum:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - unzip
          - waypoint
          - python-docker-py
        state: latest
    - name: add docker group
      group:
        name: docker
        state: present
    - name: add $USER to docker group
      user: 
        name: "{{ ansible_user }}"
        groups: docker
        append: true
    - name: do a ssh reset in order to reflect the $USER group changes
      meta: reset_connection
    - name: start Docker service
      systemd:
        name: docker
        state: started        

- name: Agent installation
  hosts: agents
  become: true
  tasks:
    - name: create Maven directory
      file: 
        path: "/opt/tools/maven"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true
    - name: download Maven 3.8.5
      unarchive:
        src: https://mirrors.sonic.net/apache/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
        dest: /opt/tools/maven
        remote_src: true
    - name: create Maven latest symlink
      file: 
        src: /opt/tools/maven/apache-maven-3.8.5
        dest: /opt/tools/maven/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: setup Maven profile
      copy:
        dest: /etc/profile.d/maven.sh
        content: |
          PATH=/opt/tools/maven/latest/bin:$PATH
    - name: create Gradle directory
      file: 
        path: "/opt/tools/gradle"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true
    - name: download Gradle 7.2
      unarchive:
        src: https://services.gradle.org/distributions/gradle-7.2-bin.zip
        dest: /opt/tools/gradle
        remote_src: true
    - name: create Gradle latest symlink
      file: 
        src: /opt/tools/gradle/gradle-7.2
        dest: /opt/tools/gradle/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: setup Gradle profile
      copy:
        dest: /etc/profile.d/gradle.sh
        content: |
          PATH=/opt/tools/gradle/latest/bin:$PATH
    - name: set final ownership to /opt/tools
      file: 
        path: "/opt/tools"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true

- name: Waypoint server installation
  hosts: waypoint_servers
  tasks:
    - name: Pull Waypoint image
      community.general.docker_image:
        name: hashicorp/waypoint:latest
        source: pull
    - name: Inspect image
      community.general.docker_image_info:
        name: hashicorp/waypoint:latest
      register: result
    - name: Make sure that hashicorp/waypoint exists locally
      ansible.builtin.assert:
        that:
          - result.images | length == 1
    - name: Install the Waypoint server
      command: waypoint install --platform=docker -accept-tos

- name: Jenkins installation
  hosts: jenkins_controllers
  tasks:
    - name: enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: true
    - name: permit traffic in default zone on port 8080/tcp
      ansible.posix.firewalld:
        port: 8080/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: jenkins yum repository
      become: true
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: http://pkg.jenkins.io/redhat-stable
        enabled: true
        gpgcheck: true
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    - name: Install Jenkins
      become: true
      yum:
        name:
          - jenkins-2.319.3
        state: latest
    - name: Create directories for Jenkins
      become: true
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: true
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
        - '/var/lib/jenkins/plugins'
    - name: Update JENKINS_JAVA_OPTIONS
      become: true
      lineinfile:
        path: "/etc/sysconfig/jenkins"
        regexp: ".*-Djava.awt.headless=true.*"
        line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Djenkins.install.runSetupWizard=false -Djava.io.tmpdir=/var/cache/jenkins/tmp/ -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York -Duser.timezone=America/New_York"'
        state: present
    - name: Update JENKINS_ARGS
      become: true
      lineinfile:
        path: "/etc/sysconfig/jenkins"
        regexp: ".*JENKINS_ARGS=.*"
        line: 'JENKINS_ARGS="--pluginroot=/var/cache/jenkins/plugins"'
        state: present
    - name: Create limits file
      become: true
      copy:
        dest: "/etc/security/limits.d/30-jenkins.conf"
        src: "30-jenkins.conf"
    - name: download jenkins-plugin-manager
      get_url:
        url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.5.0/jenkins-plugin-manager-2.9.0.jar
        dest: $HOME/jenkins-plugin-manager.jar
    - name: Copy the plugins.yaml file
      copy:
        dest: "$HOME/plugins.yaml"
        src: "plugins.yaml"
    - name: Copy the jenkins.yaml file
      become: true
      copy:
        dest: "/var/lib/jenkins/jenkins.yaml"
        src: "jenkins.yaml"
    - name: run the jenkins-plugin-manager
      become: true
      command: java -jar jenkins-plugin-manager.jar --jenkins-version 2.263.4 --plugin-file plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins
    - name: update plugin ownership
      become: true
      file:
        path: /var/lib/jenkins
        owner: jenkins
        group: jenkins
        state: directory
        recurse: true
    - name: start jenkins service
      become: true
      systemd:
        name: jenkins
        state: started
